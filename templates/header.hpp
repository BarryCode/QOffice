////////////////////////////////////////////////////////////////////////////////
//
// QOffice - The office framework for Qt
// Copyright (C) 2016-2018 Nicolas Kogler
//
// QOffice is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// QOffice is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with QOffice. If not, see <http://www.gnu.org/licenses/>.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// \file $FiLe.hpp
/// \brief $Filedesc
///
////////////////////////////////////////////////////////////////////////////////

#pragma once
#ifndef QOFFICE_$PATH_$FILE_HPP
#define QOFFICE_$PATH_$FILE_HPP

#include <QOffice/Config.hpp>

////////////////////////////////////////////////////////////////////////////////
/// \class $Class
/// \brief $Classdesc
/// \author $Name ($Mail)
/// \date $Longmonth $Day, $Year
///
////////////////////////////////////////////////////////////////////////////////
class QOFFICE_$MODULE_API $Class
{
public:

    OffDeclareCtor($Class)
    OffDeclareDtor($Class)
    OffDeclareCopy($Class)
    OffDeclareMove($Class)

    // <getters>
    ////////////////////////////////////////////////////////////////////////////
    /// <func_desc>
    ///
    /// \param[<in_out>] <param> <param_desc>
    /// \return <return_desc>
    ///
    ////////////////////////////////////////////////////////////////////////////

    // <setters>

    // <other_methods>

private:

    ////////////////////////////////////////////////////////////////////////////
    // Functions
    //
    ////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////
    // Members
    //
    ////////////////////////////////////////////////////////////////////////////
    int m_exampleMember; ///< Description
};

#endif

////////////////////////////////////////////////////////////////////////////////
/// \class $Class
/// \ingroup $Module
///
/// $Detailedclassdesc
///
/// \code
/// <example_code>
/// \endcode
///
////////////////////////////////////////////////////////////////////////////////
